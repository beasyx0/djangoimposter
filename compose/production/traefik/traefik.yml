log:
  level: INFO

entryPoints:
  web:
    # http
    address: ":80"

  web-secure:
    # https
    address: ":443"

  # flower:
  #   address: ":5555"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "b_easyx@protonmail.com"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    web-router:
      rule: "Host(`djangoimposter.com`) || Host(`www.djangoimposter.com`)"
      
      entryPoints:
        - web
      middlewares:
        - redirect
        - csrf
      service: django

    web-secure-router:
      rule: "Host(`djangoimposter.com`) || Host(`www.djangoimposter.com`)"
      
      entryPoints:
        - web-secure
      middlewares:
        - csrf
      service: django
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

    # flower-secure-router:
    #   rule: "Host(`djangoimposter.com`)"
    #   entryPoints:
    #     - flower
    #   service: flower
    #   tls:
    #     # https://docs.traefik.io/master/routing/routers/#certresolver
    #     certResolver: letsencrypt

  middlewares:
    redirect:
      # https://docs.traefik.io/master/middlewares/redirectscheme/
      redirectScheme:
        scheme: https
        permanent: true
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ["X-CSRFToken"]
    # TODO: implement rate limiting
    # https://doc.traefik.io/traefik/v2.0/middlewares/ratelimit/#configuration-example
    # Here, an average of 100 requests per second is allowed.
    # In addition, a burst of 50 requests is allowed.
    # test-ratelimit:
    #   rateLimit:
    #     average: 100
    #     burst: 50

  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:5000

    # flower:
    #   loadBalancer:
    #     servers:
    #       - url: http://flower:5555

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
