version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: djangoimposter_local_django
    container_name: django
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: djangoimposter_production_postgres
    container_name: postgres
    restart: unless-stopped
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:5.0
    container_name: redis
    restart: unless-stopped

  celeryworker:
    <<: *django
    image: djangoimposter_local_celeryworker
    container_name: celeryworker
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: djangoimposter_local_celerybeat
    container_name: celerybeat
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      
    ports: []
    command: /start-celerybeat

  # nginx-proxy:
  #   image: jwilder/nginx-proxy:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #   restart: always
  #   depends_on:
  #     - django